kind: "Template"
apiVersion: "v1"
metadata: 
  name: "nginx"
  creationTimestamp: null
  annotations: 
    description: "Nginx template using"
    iconClass: "icon-php"
    tags: "webserver,nginx,php"
objects: 
  - 
    kind: "Service"
    apiVersion: "v1"
    metadata:
      name: "${SERVICE_NAME}"
    spec:
      ports:
        - name: "nginx-server"
          protocol: "TCP"
          port: 80
          targetPort: 8080
      selector:
        name: "${SERVICE_NAME}"
      type: "ClusterIP"
    status: 
      loadBalancer: {}
  - 
    kind: "Service"
    apiVersion: "v1"
    metadata: 
      name: "${DATABASE_SERVICE_NAME}"
      creationTimestamp: null
    spec: 
      ports: 
        - 
          name: "mysql"
          protocol: "TCP"
          port: 3306
          targetPort: 3306
          nodePort: 0
      selector: 
        name: "${DATABASE_SERVICE_NAME}"
      portalIP: ""
      type: "ClusterIP"
      sessionAffinity: "None"
    status: 
      loadBalancer: {}
  - 
    kind: "DeploymentConfig"
    apiVersion: "v1"
    metadata: 
      name: "${DATABASE_SERVICE_NAME}"
      creationTimestamp: null
    spec: 
      strategy: 
        type: "Recreate"
      triggers: 
        - 
          type: "ImageChange"
          imageChangeParams: 
            automatic: false
            containerNames: 
              - "mysql"
            from: 
              kind: "ImageStreamTag"
              name: "mysql:latest"
              namespace: "${MYSQL_NAMESPACE}"
            lastTriggeredImage: ""
        - 
          type: "ConfigChange"
      replicas: 1
      selector: 
        name: "${DATABASE_SERVICE_NAME}"
      template: 
        metadata: 
          creationTimestamp: null
          labels: 
            name: "${DATABASE_SERVICE_NAME}"
        spec: 
          containers: 
            - 
              name: "mysql"
              image: "mysql"
              ports: 
                - 
                  containerPort: 3306
                  protocol: "TCP"
              readinessProbe: 
                timeoutSeconds: 1
                initialDelaySeconds: 5
                exec: 
                  command: 
                    - "/bin/sh"
                    - "-i"
                    - "-c"
                    - "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"
              livenessProbe: 
                timeoutSeconds: 1
                initialDelaySeconds: 30
                tcpSocket: 
                  port: 3306
              env: 
                - 
                  name: "MYSQL_USER"
                  value: "${MYSQL_USER}"
                - 
                  name: "MYSQL_PASSWORD"
                  value: "${MYSQL_PASSWORD}"
                - 
                  name: "MYSQL_ROOT_PASSWORD"
                  value: "${MYSQL_ROOT_PASSWORD}"
                - 
                  name: "MYSQL_DATABASE"
                  value: "${MYSQL_DATABASE}"
              resources:
                requests: 
                  memory: "256Mi"
                limits: 
                  memory: "${MYSQL_MEMORY_LIMIT}"
              volumeMounts: 
                - 
                  name: "${DATABASE_SERVICE_NAME}-data"
                  mountPath: "/var/lib/mysql/data"
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: "IfNotPresent"
              capabilities: {}
              securityContext: 
                capabilities: {}
                privileged: false
          volumes: 
            - 
              name: "${DATABASE_SERVICE_NAME}-data"
              emptyDir: 
                medium: ""
          restartPolicy: "Always"
          dnsPolicy: "ClusterFirst"
    status: {}
  - 
    kind: "DeploymentConfig"
    apiVersion: "v1"
    metadata: 
      name: "${SERVICE_NAME}"
      creationTimestamp: null
    spec: 
      strategy:
        type: "Recreate"
      triggers: 
        - 
          type: "ImageChange"
          imageChangeParams: 
            automatic: false
            containerNames: 
              - nginx
            from:
              kind: "ImageStreamTag"
              name: "prod-gb-nginx:latest"
              namespace: "${NAMESPACE}"
            lastTriggeredImage: ""
        - 
          type: "ImageChange"
          imageChangeParams: 
            automatic: false
            containerNames: 
              - php
            from:
              kind: "ImageStreamTag"
              name: "prod-gb-phpfpm:latest"
              namespace: "${NAMESPACE}"
            lastTriggeredImage: ""
        - 
          type: "ConfigChange"
      replicas: 1
      selector: 
        name: "${SERVICE_NAME}"
      template: 
        metadata: 
          creationTimestamp: null
          labels: 
            name: "${SERVICE_NAME}"
        spec: 
          containers: 
            - name: nginx
              image: oshanrube/prod-gb-nginx:1
              ports:
                - name: "nginx-server"
                  containerPort: 8080
                  protocol: "TCP"
              resources: 
                requests:
                  memory: "64Mi"
                limits: 
                  memory: "${MEMORY_LIMIT}"
              # volumeMounts: 
              #   - 
              #     name: "${SERVICE_NAME}-data"
              #     mountPath: "/var/lib/mysql/data"
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: "IfNotPresent"
              capabilities: {}
              securityContext: 
                capabilities: {}
                privileged: false
              env: 
                - 
                  name: "MYSQL_USER"
                  value: "${MYSQL_USER}"
                - 
                  name: "MYSQL_PASSWORD"
                  value: "${MYSQL_PASSWORD}"
                - 
                  name: "MYSQL_DATABASE"
                  value: "${MYSQL_DATABASE}"
                - 
                  name: "DATABASE_SERVICE_NAME"
                  value: "${DATABASE_SERVICE_NAME}"
            - name: php
              image: oshanrube/prod-gb-phpfpm:1
              ports:
                - containerPort: 9000
                  protocol: "TCP"
              resources: 
                requests:
                  memory: "64Mi"
                limits: 
                  memory: "${MEMORY_LIMIT}"
              # volumeMounts: 
              #   - 
              #     name: "${SERVICE_NAME}-data"
              #     mountPath: "/var/lib/mysql/data"
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: "IfNotPresent"
              capabilities: {}
              env: 
                - 
                  name: "MYSQL_USER"
                  value: "${MYSQL_USER}"
                - 
                  name: "MYSQL_PASSWORD"
                  value: "${MYSQL_PASSWORD}"
                - 
                  name: "MYSQL_DATABASE"
                  value: "${MYSQL_DATABASE}"
                - 
                  name: "DATABASE_SERVICE_NAME"
                  value: "${DATABASE_SERVICE_NAME}"
              securityContext: 
                capabilities: {}
                privileged: false
          # volumes: 
          #   - 
          #     name: "${SERVICE_NAME}-data"
          #     emptyDir: 
          #       medium: ""
          restartPolicy: "Always"
          dnsPolicy: "ClusterFirst"
    status: {}
parameters: 
  - 
    name: "NAMESPACE"
    displayName: "Namespace"
    description: "The OpenShift Namespace where the ImageStream resides."
    value: "oshanrube"
  - 
    name: "MYSQL_NAMESPACE"
    displayName: "Mysql Namespace"
    description: "The OpenShift Namespace where the ImageStream resides."
    value: "openshift"
  - 
    name: "SERVICE_NAME"
    displayName: "Service Name"
    description: "The name of the Service exposed for the nginx."
    value: "nginx"
    required: true
  - 
    name: "DATABASE_SERVICE_NAME"
    displayName: "Database Service Name"
    description: "The name of the OpenShift Service exposed for the database."
    value: "mysql"
    required: true
  - 
    name: "MYSQL_MEMORY_LIMIT"
    displayName: "MYSQL Memory Limit"
    description: "Maximum amount of memory the container can use."
    value: "512Mi"
  - 
    name: "MEMORY_LIMIT"
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    value: "256Mi"
  - 
    name: "MYSQL_USER"
    displayName: "MySQL User"
    description: "Username for MySQL user that will be used for accessing the database."
    generate: "expression"
    from: "user[A-Z0-9]{3}"
    required: true
  - 
    name: "MYSQL_PASSWORD"
    displayName: "MySQL Password"
    description: "Password for the MySQL user."
    generate: "expression"
    from: "[a-zA-Z0-9]{16}"
    required: true
  - 
    name: "MYSQL_ROOT_PASSWORD"
    displayName: "MySQL Root Password"
    description: "Password for the MySQL root."
    generate: "expression"
    from: "[a-zA-Z0-9]{16}"
    required: true
  - 
    name: "MYSQL_DATABASE"
    displayName: "MySQL Database Name"
    description: "Name of the MySQL database accessed."
    value: "sampledb"
    required: true
labels: 
  template: "nginx-template"
