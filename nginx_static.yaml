apiVersion: v1
kind: DeploymentConfig
metadata:
  name: nginxrc
  labels:
    name: nginxrc
spec:
  strategy:
    customParams:
      environment: 
        - name: MYSQL_USER
          value: ${MYSQL_USER}
        - name: MYSQL_PASSWORD
          value: ${MYSQL_PASSWORD}
        - name: MYSQL_DATABASE
          value: ${MYSQL_DATABASE}
  replicas: 1
  selector:
    name: nginxpod
  template:
    metadata:
      labels:
        name: nginxpod
    spec:
      containers:
        - name: nginx
          image: oshanrube/prod-gb-nginx:1
          ports:
            - containerPort: 8080
              name: "nginx-server"
        - name: php
          image: oshanrube/prod-gb-phpfpm:1
          ports:
            - containerPort: 9000
      env":
        - name: MYSQL_USER
          value: ${MYSQL_USER}
        - name: MYSQL_PASSWORD
          value: ${MYSQL_PASSWORD}
        - name: MYSQL_DATABASE
          value: ${MYSQL_DATABASE}
  parameters: 
    - 
      name: "MYSQL_USER"
      displayName: "MySQL User"
      description: "Username for MySQL user that will be used for accessing the database."
      generate: "expression"
      from: "user[A-Z0-9]{3}"
      required: true
    - 
      name: "MYSQL_PASSWORD"
      displayName: "MySQL Password"
      description: "Password for the MySQL user."
      generate: "expression"
      from: "[a-zA-Z0-9]{16}"
      required: true
    - 
      name: "MYSQL_DATABASE"
      displayName: "MySQL Database Name"
      description: "Name of the MySQL database accessed."
      value: "sampledb"
      required: true
----
kind: "Service"
apiVersion: "v1"
metadata:
  name: "nginxservice"
spec:
  ports:
    - name: "nginx-server"
      protocol: "TCP"
      port: 80
      targetPort: 8080
  selector:
    name: nginxpod
  type: LoadBalancer
---
  kind: "Route"
  apiVersion: "v1"
  metadata: 
    name: "nginxroute"
  spec: 
    host: "docker.dev"
    to: 
      kind: "Service"
      name: "nginxservice"
    tls: 
      termination: "edge"
