
oc policy add-role-to-user admin oshan -n openshift

git clone https://github.com/openshift/openshift-ansible.git && \
oc create -f \
    openshift-ansible/roles/openshift_examples/files/examples/v1.1/db-templates -n openshift && \
oc create -f \
    openshift-ansible/roles/openshift_examples/files/examples/v1.1/image-streams/image-streams-centos7.json \
    -n openshift

wget https://github.com/openshift/origin/releases/download/v1.1.0.1/openshift-origin-server-v1.1.0.1-bf56e23-linux-64bit.tar.gz | tar  -zxvf

PATH=$PATH:`pwd`; export PATH
openshift start --public-master=https://104.199.136.219:8443


sudo su - tempuser
gcloud compute ssh instance-1

mount 172.17.42.1:/home/data/pv0001 htdocs

PATH=$PATH:/home/tempuser/openshift-origin-server
export PATH

https://docs.openshift.org/latest/install_config/install/prerequisites.html#host-preparation
export KUBECONFIG="$(pwd)"/openshift.local.config/master/admin.kubeconfig
export CURL_CA_BUNDLE="$(pwd)"/openshift.local.config/master/ca.crt
sudo chmod +r "$(pwd)"/openshift.local.config/master/admin.kubeconfig
oc login -u system:admin
oadm router router-1 --replicas=1 --credentials='/home/tempuser/openshift-origin-server/openshift.local.config/master/openshift-router.kubeconfig' --images='registry.access.redhat.com/openshift3/ose-${component}:${version}'

docker run -d -e CONFD_ETCD_NODE=0.0.0.0:4001 -t -p 80:80 darkgaro/kubernetes-reverseproxy


oadm router -o yaml \
    --credentials='/home/tempuser/openshift-origin-server/openshift-router.kubeconfig' \
    --service-account=router


oc get scc --template="{{range .items}}{{.metadata.name}}: n={{.allowHostNetwork}},p={{.allowHostPorts}}; {{end}}" privileged: n=true,p=true; restricted: n=false,p=false;


iptables -A FORWARD -p tcp -d 172.30.95.252 --dport 3306 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
docker run --rm -it -p 80:80 -p 443:443 openshift/origin-haproxy-router --master https://104.199.136.219:8443/

docker run --rm -it -p 80:80 origin/openshift-haproxy-router -master

docker run -d --name "origin" \
        --privileged --pid=host --net=host \
        -v /:/rootfs:ro -v /var/run:/var/run:rw -v /sys:/sys -v /var/lib/docker:/var/lib/docker:rw \
        -v /var/lib/origin/openshift.local.volumes:/var/lib/origin/openshift.local.volumes \
        openshift/origin start --public-master=https://104.199.136.219:8443 --cloud provider

docker exec -it origin bash

-----------update docker run
Edit the restricted SCC:
oc edit scc restricted
Change runAsUser.Type to MustRunAsNonRoot.
Save the changes.


iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 8081 -j DNAT --to 172.30.18.27:80
iptables -A FORWARD -p tcp -d 172.30.18.27 --dport 8081 -j ACCEPT

iptables -t nat --line-numbers -L PREROUTING
iptables --line-numbers -L FORWARD


iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 3306 -j DNAT --to 172.17.0.16:3306
iptables -A FORWARD -p tcp -d 172.17.0.16 --dport 3306 -j ACCEPT



oadm router -o yaml \
    --credentials='openshift.local.config/master/openshift-router.kubeconfig' \
    --service-account=router

oadm router router --replicas=1 \
    --credentials='openshift.local.config/master/openshift-router.kubeconfig' \
    --service-account=router


----nfs for cent 7
yum install net-tools go git wget nfs-utils docker -y
systemctl enable rpcbind
systemctl enable nfs-server
systemctl start rpcbind
systemctl start nfs-server
systemctl start nfs-lock
systemctl start nfs-idmap
systemctl start docker
curl https://sdk.cloud.google.com | bash

mkdir /mnt/nfsdatadisk
/usr/share/google/safe_format_and_mount -m "mkfs.ext4 -F" /dev/disk/by-id/google-nfsdatadisk /mnt/nfsdatadisk


mkdir /home/data/pv0001 /home/data/pv0002 -p

vi /etc/exports
/mnt/nfsdatadisk/media *(rw,sync,no_root_squash,no_subtree_check)

gcloud container clusters get-credentials grocery-bag


docker run --rm -it -p 80:80 -p 443:443 openshift/origin-haproxy-router --master https://104.199.136.219:8443

-------------------------
export GOPATH=/home/drkmafia/gopath
go get github.com/openshift/source-to-image
cd ${GOPATH}/src/github.com/openshift/source-to-image
export PATH=$PATH:${GOPATH}/src/github.com/openshift/source-to-image/_output/local/bin/linux/amd64/
hack/build-go.sh

curl https://sdk.cloud.google.com | bash

107.167.189.95
ssh drkmafia@107.167.189.95 -i /root/google

kubectl rolling-update nginxrc -f nginx.yaml
kubectl rolling-update nginxrc --image=gcr.io/learn-kubernetes/prod-gb-nginx:latest

107.167.191.175

/mnt/nfsdatadisk *(rw,sync,no_root_squash,insecure,fsid=0)


gcloud docker pull gcr.io/learn-kubernetes/prod-gb-nginx

docker tag gcr.io/learn-kubernetes/prod-gb-nginx gcr.io/grocery-bag-2/prod-gb-nginx
docker push gcr.io/grocery-bag-2/prod-gb-nginx

gcloud docker pull gcr.io/learn-kubernetes/prod-gb-phpfpm
docker tag gcr.io/learn-kubernetes/prod-gb-phpfpm gcr.io/grocery-bag-2/prod-gb-phpfpm
docker push gcr.io/grocery-bag-2/prod-gb-phpfpm

----------------
relocate docker image location
----------------
/etc/sysconfig/docker

-g /mnt/nfsdatadisk/docker